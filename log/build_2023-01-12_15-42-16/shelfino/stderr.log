In file included from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:[m[K In constructor â€˜[01m[KShelfinoDto::ShelfinoDto()[m[Kâ€™:
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = std::vector<Point2D>][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue(const SafeValue<std::vector<Point2D> >&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue(SafeValue<std::vector<Point2D> >&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<Polygon>::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = Polygon][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<Polygon>::SafeValue(const SafeValue<Polygon>&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<Polygon>::SafeValue(SafeValue<Polygon>&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = std::vector<Polygon>][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue(const SafeValue<std::vector<Polygon> >&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue(SafeValue<std::vector<Polygon> >&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<DubinPoint>::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = DubinPoint][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr SafeValue<DubinPoint>::SafeValue(const SafeValue<DubinPoint>&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr SafeValue<DubinPoint>::SafeValue(SafeValue<DubinPoint>&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<DubinPoint>::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = DubinPoint][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr SafeValue<DubinPoint>::SafeValue(const SafeValue<DubinPoint>&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr SafeValue<DubinPoint>::SafeValue(SafeValue<DubinPoint>&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<RoadMap>::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = RoadMap][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<RoadMap>::SafeValue(const SafeValue<RoadMap>&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<RoadMap>::SafeValue(SafeValue<RoadMap>&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:156:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<DubinCurve>::SafeValue()[m[Kâ€™
  156 |         ShelfinoDto()[01;31m[K{[m[K
      |                      [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = DubinCurve][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<DubinCurve>::SafeValue(const SafeValue<DubinCurve>&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<DubinCurve>::SafeValue(SafeValue<DubinCurve>&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:157:62:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue()[m[Kâ€™
  157 |             gates_position = SafeValue<std::vector<Point2D>>([01;31m[K)[m[K;
      |                                                              [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = std::vector<Point2D>][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue(const SafeValue<std::vector<Point2D> >&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Point2D> >::SafeValue(SafeValue<std::vector<Point2D> >&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:159:57:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue()[m[Kâ€™
  159 |             obstacles = SafeValue<std::vector<Polygon>>([01;31m[K)[m[K;
      |                                                         [01;31m[K^[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<T>::SafeValue(T) [with T = std::vector<Polygon>][m[Kâ€™
  137 |         [01;36m[KSafeValue[m[K(T value):value{value}, valid{false}{}
      |         [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue(const SafeValue<std::vector<Polygon> >&)[m[Kâ€™
  131 | class [01;36m[KSafeValue[m[K{
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KSafeValue<std::vector<Polygon> >::SafeValue(SafeValue<std::vector<Polygon> >&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:131:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:162:50:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KRoadMap::RoadMap()[m[Kâ€™
  162 |             roadmap = SafeValue<RoadMap>(RoadMap([01;31m[K)[m[K);
      |                                                  [01;31m[K^[m[K
In file included from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:28[m[K,
                 from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:74:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRoadMap::RoadMap(Room)[m[Kâ€™
   74 |         [01;36m[KRoadMap[m[K(Room r):r{r}{}
      |         [01;36m[K^~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:74:9:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:66:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRoadMap::RoadMap(const RoadMap&)[m[Kâ€™
   66 | class [01;36m[KRoadMap[m[K
      |       [01;36m[K^~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:66:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:66:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KRoadMap::RoadMap(RoadMap&&)[m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/install/map/include/map/map.hpp:66:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
                 from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
                 from [01m[K/usr/include/c++/11/unordered_map:40[m[K,
                 from [01m[K/usr/include/c++/11/functional:61[m[K,
                 from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:1[m[K,
                 from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
/usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = FollowPathClient; _Args = {SafeValue<RoadMap>&}; _Tp = FollowPathClient][m[Kâ€™:
[01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = FollowPathClient; _Args = {SafeValue<RoadMap>&}; _Tp = FollowPathClient; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<FollowPathClient>][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {SafeValue<RoadMap>&}; _Tp = FollowPathClient; _Alloc = std::allocator<FollowPathClient>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = FollowPathClient; _Alloc = std::allocator<FollowPathClient>; _Args = {SafeValue<RoadMap>&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<FollowPathClient>; _Args = {SafeValue<RoadMap>&}; _Tp = FollowPathClient; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<FollowPathClient>; _Args = {SafeValue<RoadMap>&}; _Tp = FollowPathClient][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = FollowPathClient; _Alloc = std::allocator<FollowPathClient>; _Args = {SafeValue<RoadMap>&}][m[Kâ€™
[01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = FollowPathClient; _Args = {SafeValue<RoadMap>&}][m[Kâ€™
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:29:65:[m[K   required from here
[01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KFollowPathClient::FollowPathClient(SafeValue<RoadMap>&)[m[Kâ€™
  162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:319:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KFollowPathClient::FollowPathClient(SafeValue<DubinCurve>&)[m[Kâ€™
  319 |     [01;36m[KFollowPathClient[m[K(SafeValue<DubinCurve>& curve) : Node("follow_path_client"), curve{curve} {
      |     [01;36m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:319:45:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KSafeValue<RoadMap>[m[Kâ€™ to â€˜[01m[KSafeValue<DubinCurve>&[m[Kâ€™
  319 |     FollowPathClient([01;36m[KSafeValue<DubinCurve>& curve[m[K) : Node("follow_path_client"), curve{curve} {
      |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
gmake[2]: *** [CMakeFiles/shelfino.dir/build.make:76: CMakeFiles/shelfino.dir/src/main.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/shelfino.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
