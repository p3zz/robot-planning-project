[0.016s] Invoking command in '/home/p3zz/Documents/uni/robot-planning-project/build/shelfino': CMAKE_PREFIX_PATH=/home/p3zz/Documents/uni/robot-planning-project/install/shapes:/home/p3zz/Documents/uni/robot-planning-project/install/custom_msgs:/home/p3zz/Documents/uni/robot-planning-project/install/decisions:/home/p3zz/Documents/uni/robot-planning-project/install/map:/home/p3zz/Documents/uni/robot-planning-project/install/dubins:/home/p3zz/Documents/uni/robot-planning-project/install/utils:/opt/ros/humble /usr/bin/cmake /home/p3zz/Documents/uni/robot-planning-project/communication/shelfino -DCMAKE_INSTALL_PREFIX=/home/p3zz/Documents/uni/robot-planning-project/install/shelfino
[0.069s] -- The C compiler identification is GNU 11.3.0
[0.121s] -- The CXX compiler identification is GNU 11.3.0
[0.129s] -- Detecting C compiler ABI info
[0.195s] -- Detecting C compiler ABI info - done
[0.202s] -- Check for working C compiler: /usr/bin/cc - skipped
[0.202s] -- Detecting C compile features
[0.203s] -- Detecting C compile features - done
[0.206s] -- Detecting CXX compiler ABI info
[0.281s] -- Detecting CXX compiler ABI info - done
[0.288s] -- Check for working CXX compiler: /usr/bin/c++ - skipped
[0.288s] -- Detecting CXX compile features
[0.289s] -- Detecting CXX compile features - done
[0.292s] -- Found ament_cmake: 1.3.3 (/opt/ros/humble/share/ament_cmake/cmake)
[0.456s] -- Found Python3: /usr/bin/python3.10 (found version "3.10.6") found components: Interpreter 
[0.557s] -- Found rclcpp: 16.0.2 (/opt/ros/humble/share/rclcpp/cmake)
[0.612s] -- Found rosidl_generator_c: 3.1.4 (/opt/ros/humble/share/rosidl_generator_c/cmake)
[0.618s] -- Found rosidl_adapter: 3.1.4 (/opt/ros/humble/share/rosidl_adapter/cmake)
[0.628s] -- Found rosidl_generator_cpp: 3.1.4 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
[0.643s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[0.665s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[0.739s] -- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
[0.743s] -- Found rmw_fastrtps_cpp: 6.2.2 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
[0.839s] -- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  
[0.867s] -- Found FastRTPS: /opt/ros/humble/include  
[0.914s] -- Using RMW implementation 'rmw_fastrtps_cpp' as default
[0.926s] -- Looking for pthread.h
[0.995s] -- Looking for pthread.h - found
[0.996s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[1.071s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
[1.072s] -- Found Threads: TRUE  
[1.246s] -- Found geometry_msgs: 4.2.2 (/opt/ros/humble/share/geometry_msgs/cmake)
[1.291s] -- Found custom_msgs: 0.1.2 (/home/p3zz/Documents/uni/robot-planning-project/install/custom_msgs/share/custom_msgs/cmake)
[1.373s] -- Found shapes: 0.0.0 (/home/p3zz/Documents/uni/robot-planning-project/install/shapes/share/shapes/cmake)
[1.375s] -- Found dubins: 0.0.0 (/home/p3zz/Documents/uni/robot-planning-project/install/dubins/share/dubins/cmake)
[1.376s] -- Found map: 0.0.0 (/home/p3zz/Documents/uni/robot-planning-project/install/map/share/map/cmake)
[1.377s] -- Found utils: 0.0.0 (/home/p3zz/Documents/uni/robot-planning-project/install/utils/share/utils/cmake)
[1.389s] -- Found tf2: 0.25.1 (/opt/ros/humble/share/tf2/cmake)
[1.408s] -- Found tf2_ros: 0.25.1 (/opt/ros/humble/share/tf2_ros/cmake)
[1.818s] -- Found ament_lint_auto: 0.12.4 (/opt/ros/humble/share/ament_lint_auto/cmake)
[1.897s] -- Added test 'cppcheck' to perform static code analysis on C / C++ code
[1.897s] -- Configured cppcheck include dirs: /home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include
[1.897s] -- Configured cppcheck exclude dirs and/or files: 
[1.898s] -- Added test 'lint_cmake' to check CMake code style
[1.899s] -- Added test 'uncrustify' to check C / C++ code style
[1.899s] -- Configured uncrustify additional arguments: 
[1.900s] -- Added test 'xmllint' to check XML markup files
[1.901s] -- Configuring done
[1.915s] -- Generating done
[1.917s] -- Build files have been written to: /home/p3zz/Documents/uni/robot-planning-project/build/shelfino
[1.928s] Invoked command in '/home/p3zz/Documents/uni/robot-planning-project/build/shelfino' returned '0': CMAKE_PREFIX_PATH=/home/p3zz/Documents/uni/robot-planning-project/install/shapes:/home/p3zz/Documents/uni/robot-planning-project/install/custom_msgs:/home/p3zz/Documents/uni/robot-planning-project/install/decisions:/home/p3zz/Documents/uni/robot-planning-project/install/map:/home/p3zz/Documents/uni/robot-planning-project/install/dubins:/home/p3zz/Documents/uni/robot-planning-project/install/utils:/opt/ros/humble /usr/bin/cmake /home/p3zz/Documents/uni/robot-planning-project/communication/shelfino -DCMAKE_INSTALL_PREFIX=/home/p3zz/Documents/uni/robot-planning-project/install/shelfino
[1.930s] Invoking command in '/home/p3zz/Documents/uni/robot-planning-project/build/shelfino': CMAKE_PREFIX_PATH=/home/p3zz/Documents/uni/robot-planning-project/install/shapes:/home/p3zz/Documents/uni/robot-planning-project/install/custom_msgs:/home/p3zz/Documents/uni/robot-planning-project/install/decisions:/home/p3zz/Documents/uni/robot-planning-project/install/map:/home/p3zz/Documents/uni/robot-planning-project/install/dubins:/home/p3zz/Documents/uni/robot-planning-project/install/utils:/opt/ros/humble /usr/bin/cmake --build /home/p3zz/Documents/uni/robot-planning-project/build/shelfino -- -j8 -l8
[1.984s] [ 50%] [32mBuilding CXX object CMakeFiles/shelfino.dir/src/main.cpp.o[0m
[6.545s] In file included from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[6.545s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:135:55:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KPoseArray[m[Kâ€™ in namespace â€˜[01m[Kgeometry_msgs::msg[m[Kâ€™ does not name a type
[6.545s]   135 |         void topic_callback(const geometry_msgs::msg::[01;31m[KPoseArray[m[K& msg) {
[6.545s]       |                                                       [01;31m[K^~~~~~~~~[m[K
[6.600s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:[m[K In constructor â€˜[01m[KGatesSubscriber::GatesSubscriber(SafeValue<std::vector<Point2D> >&)[m[Kâ€™:
[6.600s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:129:39:[m[K [01;31m[Kerror: [m[Kclass â€˜[01m[KGatesSubscriber[m[Kâ€™ does not have any field named â€˜[01m[Kgate_position[m[Kâ€™
[6.600s]   129 |             Node("gates_subscriber"), [01;31m[Kgate_position[m[K{gate_position} {
[6.601s]       |                                       [01;31m[K^~~~~~~~~~~~~[m[K
[6.608s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:129:53:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kgate_position[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kgates_position[m[Kâ€™?
[6.608s]   129 |             Node("gates_subscriber"), gate_position{[01;31m[Kgate_position[m[K} {
[6.608s]       |                                                     [01;31m[K^~~~~~~~~~~~~[m[K
[6.608s]       |                                                     [32m[Kgates_position[m[K
[6.614s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:128:9:[m[K [01;31m[Kerror: [m[Kuninitialized reference member in â€˜[01m[Kclass SafeValue<std::vector<Point2D> >&[m[Kâ€™ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;[m[K]
[6.615s]   128 |         [01;31m[KGatesSubscriber[m[K(SafeValue<std::vector<Point2D>>& gates_position) :
[6.615s]       |         [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.615s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:144:42:[m[K [01;36m[Knote: [m[Kâ€˜[01m[KSafeValue<std::vector<Point2D> >& GatesSubscriber::gates_position[m[Kâ€™ should be initialized
[6.615s]   144 |         SafeValue<std::vector<Point2D>>& [01;36m[Kgates_position[m[K;
[6.615s]       |                                          [01;36m[K^~~~~~~~~~~~~~[m[K
[6.625s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:128:58:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kgates_position[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[6.626s]   128 |         GatesSubscriber([01;35m[KSafeValue<std::vector<Point2D>>& gates_position[m[K) :
[6.626s]       |                         [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[6.626s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:[m[K In member function â€˜[01m[Kvoid GatesSubscriber::topic_callback(const int&)[m[Kâ€™:
[6.626s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:137:31:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kposes[m[Kâ€™ in â€˜[01m[Kmsg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[6.626s]   137 |           for(auto &pose: msg.[01;31m[Kposes[m[K){
[6.626s]       |                               [01;31m[K^~~~~[m[K
[6.862s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:[m[K In function â€˜[01m[Kvoid subscriber_body(ShelfinoDto&)[m[Kâ€™:
[6.862s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:5:66:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ShelfinoDto[m[Kâ€™ has no member named â€˜[01m[Kgate_position[m[Kâ€™; did you mean â€˜[01m[Kgates_position[m[Kâ€™?
[6.862s]     5 |     auto gate_subscriber = std::make_shared<GatesSubscriber>(dto.[01;31m[Kgate_position[m[K);
[6.862s]       |                                                                  [01;31m[K^~~~~~~~~~~~~[m[K
[6.862s]       |                                                                  [32m[Kgates_position[m[K
[6.894s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[6.895s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:37:16:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ShelfinoDto[m[Kâ€™ has no member named â€˜[01m[Kgate_position[m[Kâ€™; did you mean â€˜[01m[Kgates_position[m[Kâ€™?
[6.895s]    37 |     while(!dto.[01;31m[Kgate_position[m[K.is_valid() || !dto.map_borders.is_valid() || !dto.obstacles.is_valid()){}
[6.895s]       |                [01;31m[K^~~~~~~~~~~~~[m[K
[6.895s]       |                [32m[Kgates_position[m[K
[6.895s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:38:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ShelfinoDto[m[Kâ€™ has no member named â€˜[01m[Kgate_position[m[Kâ€™; did you mean â€˜[01m[Kgates_position[m[Kâ€™?
[6.895s]    38 |     std::cout<<"Gate: "<<dto.[01;31m[Kgate_position[m[K.get()<<std::endl;
[6.896s]       |                              [01;31m[K^~~~~~~~~~~~~[m[K
[6.896s]       |                              [32m[Kgates_position[m[K
[7.960s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[7.960s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:26[m[K,
[7.960s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[7.961s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[7.961s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[7.961s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[7.961s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[7.961s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[7.962s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[7.962s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[7.962s]                  from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:7[m[K,
[7.962s]                  from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[7.962s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[7.962s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.962s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.962s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.962s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.963s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:130:84:[m[K   required from here
[7.963s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::Pose_<std::allocator<void> >, std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™})
[7.963s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[7.963s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[7.963s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[7.963s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:23[m[K,
[7.963s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[7.963s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[7.964s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[7.964s]                  from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:7[m[K,
[7.964s]                  from [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/src/main.cpp:1[m[K:
[7.964s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.965s]  1477 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[7.965s]       |         [01;36m[K^~~~~~~~[m[K
[7.965s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[7.965s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const int&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[7.965s] [01m[K/usr/include/c++/11/variant:1473:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const int&)>][m[Kâ€™
[7.965s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[7.966s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.966s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.966s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.966s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.966s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:130:84:[m[K   required from here
[7.966s] [01m[K/usr/include/c++/11/variant:1391:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[7.966s]  1391 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[7.966s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[7.966s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[7.967s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.967s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.967s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.967s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[7.967s] [01m[K/home/p3zz/Documents/uni/robot-planning-project/communication/shelfino/include/shelfino/shelfino.hpp:130:84:[m[K   required from here
[7.967s] [01m[K/usr/include/c++/11/variant:1414:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.967s]  1414 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[7.967s]       |                [01;36m[K^~~~~~~~[m[K
[7.968s] [01m[K/usr/include/c++/11/variant:1414:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::Pose_<std::allocator<void> >, std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[7.968s]  1414 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[7.968s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[7.968s] [01m[K/usr/include/c++/11/variant:1415:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[7.968s]  1415 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[7.968s]       |                [01;36m[K^~~~~~~~[m[K
[7.968s] [01m[K/usr/include/c++/11/variant:1415:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::Pose_<std::allocator<void> >, std::_Bind<void (GatesSubscriber::*(GatesSubscriber*, std::_Placeholder<1>))(const int&)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::Pose_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::Pose_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::Pose_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::Pose_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[7.968s]  1415 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[7.969s]       |                          [01;36m[K^~~~~~~~~[m[K
[12.844s] gmake[2]: *** [CMakeFiles/shelfino.dir/build.make:76: CMakeFiles/shelfino.dir/src/main.cpp.o] Error 1
[12.844s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/shelfino.dir/all] Error 2
[12.844s] gmake: *** [Makefile:146: all] Error 2
[12.846s] Invoked command in '/home/p3zz/Documents/uni/robot-planning-project/build/shelfino' returned '2': CMAKE_PREFIX_PATH=/home/p3zz/Documents/uni/robot-planning-project/install/shapes:/home/p3zz/Documents/uni/robot-planning-project/install/custom_msgs:/home/p3zz/Documents/uni/robot-planning-project/install/decisions:/home/p3zz/Documents/uni/robot-planning-project/install/map:/home/p3zz/Documents/uni/robot-planning-project/install/dubins:/home/p3zz/Documents/uni/robot-planning-project/install/utils:/opt/ros/humble /usr/bin/cmake --build /home/p3zz/Documents/uni/robot-planning-project/build/shelfino -- -j8 -l8
